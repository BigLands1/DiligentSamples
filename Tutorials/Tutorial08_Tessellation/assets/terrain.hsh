#include "structures.h"

cbuffer HSConstants
{
    GlobalConstants g_Constants;
};

#ifndef BLOCK_SIZE
#   define BLOCK_SIZE 32
#endif

TerrainHSConstFuncOut ConstantHS( InputPatch<TerrainVSOut, 1> p/*, uint BlockID : SV_PrimitiveID*/)
{
    TerrainHSConstFuncOut Out;
    Out.Edges[0] = Out.Edges[1] = Out.Edges[2] = Out.Edges[3] = g_Constants.TessDensity;
    Out.Inside[0] = Out.Inside[1] = g_Constants.TessDensity;

    return Out;
}

[domain("quad")]
[partitioning("fractional_even")]
[outputtopology("triangle_ccw")]
[outputcontrolpoints(1)]
[patchconstantfunc("ConstantHS")]
[maxtessfactor( (float)(BLOCK_SIZE) )]
TerrainHSOut TerrainHS(InputPatch<TerrainVSOut, 1> inputPatch, uint uCPID : SV_OutputControlPointID )
{
    TerrainHSOut HSOut = {inputPatch[0].BlockOffset};

    return HSOut;
}
